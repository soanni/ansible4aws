---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
   - staging_vpc_info
  vars:
   region: us-west-2
   allowed_ip: 46.0.131.219/32
   prefix: staging
   vpc_id: "{{ staging_vpc }}"
   private_subnet: 10.0.1.0/24
  tasks:
   - name: modify sg_web rules
     ec2_group:
      region: "{{ region }}"
      vpc_id: "{{ vpc_id }}"
      name: "{{ prefix }}_sg_web"
      description: security group for webservers
      rules:
       # allow ssh from your ip
       - proto: tcp
         from_port: 22
         to_port: 22
         cidr_ip: "{{ allowed_ip }}"
       # allow http access from anywhere
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: 0.0.0.0/0
       # allow https access from anywhere
       - proto: tcp
         from_port: 443
         to_port: 443
         cidr_ip: 0.0.0.0/0
      rules_egress:
       - proto: tcp
         from_port: 3306
         to_port: 3306
         group_name: "{{ prefix }}_sg_database"
   - name: modify sg_database rules
     ec2_group:
      region: "{{ region }}"
      vpc_id: "{{ vpc_id }}"
      name: "{{ prefix }}_sg_database"
      description: security group for databases
      rules:
       - proto: tcp
         from_port: 3306
         to_port: 3306
         group_name: "{{ prefix }}_sg_web"
      rules_egress:
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         from_port: 443
         to_port: 443
         cidr_ip: 0.0.0.0/0
   - name: modify dg_nat rules
     ec2_group:
      region: "{{ region }}"
      vpc_id: "{{ vpc_id }}"
      name: "{{ prefix }}_sg_nat"
      description: security group for nat
      rules:
       # allow ssh access from your ip
       - proto: tcp
         from_port: 22
         to_port: 22
         cidr_ip: "{{ allowed_ip }}"
       # allow http access from private subnet
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: "{{ private_subnet }}"
       # allow https access from private subnet
       - proto: tcp
         from_port: 443
         to_port: 443
         cidr_ip: "{{ private_subnet }}"
      rules_egress:
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         from_port: 443
         to_port: 443
         cidr_ip: 0.0.0.0/0
