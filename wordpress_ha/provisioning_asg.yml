---
- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
   - include_vars: "{{ env }}.yml"
   - set_fact:
      timestamp: "{{ lookup('pipe','date +%g%m%d%H%M%S') }}"
   - name: Crete public ELB
     ec2_elb_lb:
      region: "{{ region }}"
      name: "{{ asg_name }}-{{ env }}"
      state: present
      cross_az_load_balancing: yes
      security_group_ids: "{{ elb_group_ids }}"
      subnets: "{{ elb_subnets }}"
      listeners:
       - protocol: http
         load_balancer_port: 80
         instance_port: 80
      health_check:
       ping_protocol: http
       ping_port: 80
       ping_path: "/"
       response_timeout: 2
       interval: 10
       unhealthy_threshold: 2
       healthy_threshold: 2
      connection_draining_timeout: 60
     register: elb
   - debug: var=elb
   - name: Create Launch Configuration
     ec2_lc:
      region: "{{ region }}"
      name: "{{ asg_name }}-{{ env }}-{{ timestamp }}"
      image_id: "{{ image_id }}"
      key_name: "{{ keypair }}"
      instance_type: "{{ instance_type }}"
      security_groups: "{{ security_groups }}"
      instance_monitoring: yes
     register: lc
   - debug: var=lc
   - name: Configure ASG
     ec2_asg:
      region: "{{ region }}"
      name: "{{ asg_name }}-{{ env }}-{{ timestamp }}"
      vpc_zone_identifier: "{{ asg_subnet_ids }}"
      launch_config_name: "{{ lc.name }}"
      availability_zones: "{{ zones }}"
      health_check_type: EC2
      health_check_period: 300
      desired_capacity: "{{ asg_min }}"
      min_size: "{{ asg_min }}"
      max_size: "{{ asg_max }}"
      tags:
       - Name: "{{ asg_name }}-{{ env }}"
      load_balancers: "{{ elb.elb.name }}"
      state: present
     register: asg
   - debug: var=asg
